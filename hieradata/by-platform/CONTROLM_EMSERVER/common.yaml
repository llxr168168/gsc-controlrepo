classes:
  - sw_util::hiera_wrapper
  - sw_resource_realizer::package
  
sw_resource_realizer::package:
  libnsl:
    ensure: 'installed'
  cifs-utils:
    ensure: 'installed'
  net-tools:
    ensure: 'installed'
  tcsh:
    ensure: 'installed'

sw_util::wrapper::hiera_user::params:
  - emuser: {uid: 500, home: "/swpkg/bmc", system: true, shell: "/bin/sh", password: "!!"}

sw_util::wrapper::hiera_file::params:
  - /swpkg/bmc: {
      ensure: "directory", 
      owner: "emuser", 
      group: "emuser", 
      mode: "700"
    } 

  - /etc/init.d/controlm-em: {
      ensure: "file",
      content: "controlm::controlm-em",
      owner: "root",
      group: "root",
      mode: "755",
    }

  - /root/.ctmdocscred: {
      ensure: "file",
      owner: "root",
      group: "root" ,
      content: "controlm::ctmdocscreds",
      mode: "600"
    }

controlm::ctmdocscreds: >
    ENC[PKCS7,MIIBqQYJKoZIhvcNAQcDoIIBmjCCAZYCAQAxggEhMIIBHQIBADAFMAACAQAw
    DQYJKoZIhvcNAQEBBQAEggEAbAQJUbq+xejXCcra+RlAJRJMfaOCjwT02X0Q
    1nQItFDEK1yXuYTzSmcP/5XWsPyoRVVDxdsHZnWRJqZ78fcJxu/L1gzQSK71
    hVC5X058YB1obbZMI45R5XVPJ2BQWQYhF3hdU8zYEkCt+nUNTrrXigKg8ZrJ
    hoROxcqsTu5jqO3aPWgiBzN9LUMKI6LzEtoAdmBq4hd0wvg/JOyIq3T3NOjC
    uRR8KV5MUwL+9YiKhvtl4GYdzIUY9UGz+QAY+9nD598cu8ahJRK0t2zbo8q+
    ycYpjMdt8VNU0bL63Wz4tIjMTsTb2Ke7FVUpjBhaoj54plE/EkMrinPgjitZ
    Arw/9jBsBgkqhkiG9w0BBwEwHQYJYIZIAWUDBAEqBBAlV5GZI2j1CvS3H0mL
    JqiMgEBIc0otEgQNem71+8TieDTgpcWe/pJ8MybRgQdDe6IPGvcM2sBRHlig
    3DthFslpJBPdxGvcWy0Os2P3b1UgXOL0]

sw_util::wrapper::hiera_mount::params:
  - /swpkg/BMC_WLA:
      ensure: mounted
      options: credentials=/root/.ctmdocscred,rw,uid=500,gid=1695201306,dir_mode=0770,vers=3.0
      device: //cgconhq.sw.sherwin.com/cgcon-shared3/BMC_WLA
      atboot: true
      fstype: cifs
      dump: 0
      pass: 0

access_conf::access:
  - '+:root:LOCAL'
  - "+:%{hiera('sw_snow_disc:snow_user')}:%{hiera('access_conf::snow_ips')}"
  - "+:%{hiera('sw_puppet_ansible:ansible_user')}:%{hiera('access_conf::ansible_ips')}"
  - '+:(sa-local):LOCAL'
  - '+:(sa-remote):ALL'
  - '+:(gg-adm-gcdunix):ALL'
  - '+:(SW\gg-adm-gcdunix):ALL'
  - '+:(SW\gg-cg-wla-admins):ALL'
  - '+:(DL_ADMIN_%{::hostname_upcase}):ALL'
  - '-:ALL:ALL'

sudo::sudoers_template: sudoers.gcd
sudo::sudoers_d_template: 'emuser_new'
profiles_unix::gsc::base::auth::sssd_auth: 'true'

sw_util::wrapper::hiera_service::params:
  - controlm-em: {}

controlm::controlm-em: |
        #!/bin/bash +x
        #
        # Control-M EM - Start and stop Control-M EM related services for Linux
        #
        # chkconfig: 345 99 3
        # description: Start and stop
        #




        EM_USER="emuser"
        EM_HOME="/swpkg/bmc/em"
        EM_NAME="controlm-em"


        RETVAL=0


        # Source function library.
        . /etc/rc.d/init.d/functions


        usage ()
        {
        echo "Usage: service ${$EM_NAME} {start|stop|restart|status}"
        RETVAL=1
        }


        start ()
        {
        echo -n $"Starting ${EM_NAME}: "
        su - ${EM_USER} -c 'start_ns_daemon'
        su - ${EM_USER} -c 'start_server'
        su - ${EM_USER} -c 'start_cms'
        su - ${EM_USER} -c 'start_config_agent'
        su - ${EM_USER} -c 'start_web_server'
        echo
        echo "May take serveral minutes for all servcies to fully start...."
        echo
        }

        stop ()
        {
        echo -n "Stopping ${EM_NAME}: "
        su - ${EM_USER} -c 'em ctl -U emuser -P empass -C Config_Agent -M sched01 -cmd shutdown'
        su - ${EM_USER} -c stop_ns_daemon
        su - ${EM_USER} -c stop_config_agent
        su - ${EM_USER} -c stop_web_server
        su - ${EM_USER} -c stop_cms
        su - ${EM_USER} -c stop_server

        echo
        }
 
        case "$1" in
        start) start; RETVAL=$? ;;
        stop) stop; RETVAL=$? ;;
        *) usage ; RETVAL=2 ;;
        esac

        exit $RETVAL
